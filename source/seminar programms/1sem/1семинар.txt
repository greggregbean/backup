Контакт: tg @artem_lukanin

<<Команды OC UNIX. Файловая система. Команды работы с файлами.>>

cp -r task1 task2 (копировать -рекурсивно из таск1 в таск2)

( ) - расшифровка Команды
{ | } - выбор одного из нескольких параметров 
[] - необязательные параметры
  
man (mnaual) [номер_раздела] имя -- получение информации о командей
        |         |
    расшифровка  необязательный параметр

man номер_раздела команда (для поиска команды из определённого раздела)

bash -c "команда" выполнение команды в кавычках

man man; man bash - последовательное выполнение комманд
команда1 && команда2 - то же самое, но при ошибке дальше команды не выполняются (man man && man bash) 

опции -h или --help -- вывод краткой инфы о команде (man -h)

ранее использованные команды сохраняются в ".bash_history"

обратный поиск "Ctrl + R", чтобы выйти "Ctrl + G"

info имя_команды (расширенный man) переходим по ссылкам на "Enter", выходим со страницы на "L"

"/" -- корнвая директория

pwd(print working directory) -- отображение текужей директории 

./a.out -- запуск исполняемого файла 
|
source

../../ - двойной перевод наверх

cd [имя_директория] -- change directory
ls [имя_директория] -- list directory (Keys: -a -- отображение и системных файлов, -l -- отображение подробной информации о файле)
mkdir имя_директория -- создания директория 
touch имя_файла -- создание регулярного файла

команды лежат в /bin/

cp файл1 [файл2 .. файлN] дир_назнаяения
cp -r дир1 [дир1 .. дирN] дир_назначения

mv(move) имя_источника имя_назначения (если файл имя_назачения существовал, то он будет перезаписан) -- переименование или перемещение файла
mv имя1[имя2 .. имяN] дир_назначения

rm(remove) -- удаление файлов или директорий
rm файл1 [файл2 .. файлN] -- удаление регулярных файлов
rm -r дир1 [дир2 .. дирN] -- удаление директория
rm -rf * -- нельзя делать

cat имя_файла -- просмотр содержимого файла
cat файл1 [файл2 .. файлN] -- вывод файлов в указанном порядке
cat > файл -- перенаправляем поток ввода в файл, "ctrl + d" конец ввода 

Шаблоны имён файлов.
шаблоны могут задаваться с использованием метасимволов:
* - *.c соответствует всем цепочкам литер
? - ?.c соответствует всем одиночным литерам
[...] - соответствует любой литереб заключённой в скобки (пара литер через тире задаёт диапазон)
Примеры: *.c; [a-z]*; li?ux_[acg].txt
                        |     |
        любая буква вместо   любая буква из трёх в скобках

head -n -- печать перых n строчек (изначально 10)
tail -- то же самое но для последних
more -- постраничный вывод файла (Выход q)
less -- аналогичная, только есть прокрутка в обе стороны 

tac -- печать каждого файла, начиная с последней строки
rev -- строки в правильном порядке, символы в обратном
sort -- сортировка строк объединнённых текстовых файлов
grep regexp -- вывод строк файла, соответствующих регулярному выражению regexp
wc -- печать числа строк слов и байт (-l строк, -w слов, -с байт)

Перенаправление ввода-вывода.
команда > файл (выполняем команду, помещая стандартный вывод команды в файл)
команда >> файл (дописывание)
команда < файл (из файлика в терминал)
команда < file1 > file2 (выполняем команду с вводом из файла 1 и с выводом в файл2)

Pipe: команда1 | команда2 (Выполняем команду1, её вывод передаётся команде2)
Равносильно:
команда1 > временный_файл
команда2 < временный_файл
rm временный_файл

*t* или ls|grep t -- вывод всех файлов с t в названии

Системы редактирования.
mc (Midnight Commander) -- файловый менеджер с текстовым интерфейсом
Текстовые редакторы:
mcedit -- редактор от mc
vim
emacs
nano
joe (Joe's Own Editor)

