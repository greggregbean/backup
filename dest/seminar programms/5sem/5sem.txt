SYSTEM V IPC
- часть механизмов передачи инфы между процессами, в которые входят: разделяемая память, семафоны, очереди сообщений
key_t - 32 bit num

key_t ftok(char* pathname, char proj); - генерирует ключ экземпляра средства связи System V IPC
pathname - указатель на имя существующего файла, доступного для процесса, вызывающего функцию
proj - небольшое число, характеризующее экземпляр средства связи (нпример, порядковый номер экземпляра средства связи)

Ядро Ос хранит всю информации о средствакх связи вне контекстах самих процессов.
Дескриптор однозначно определяет средство связи во всей вычислительной системе.

Разделяемая память: системные вызовы

#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/shm.h>

int shmget(key_t key, int size, int shmflg);
-создаёт область разделяемой памяти или получает доступ к уже существующему
IPC_PRIVATE - создание нового сегмента автоматически (не может быть получен с помощью ftok)
size - сколько в памяти нужно выделить места для взаимодействия между процессами (если сегмент уже существет, но с дркгим размером, то будет ошибка)
shmglg - играет роль только при создании (иначе 0) (права пользователей для доступа к сегменту, необходимость создания нового сегмента, поведение сис вызова при попытке создания)
IPC_CREATE, IPC_EXECL(ошибка при создании существующего(errno = EEXIST)) (игнорирются при наличии IPC_PRIVATE)

shmat() - включает область разделяемой памяти в адресное пространство текущего процесса
shmid - дескриптор сегмента System V IPC
shmaddr - используем всегда NULL
shmflg - 0 для осуществления чтения и записи над сегментом
       - SHM_RDONLY - только чтение
int shmdt(char* shmaddr) - после окончания использования сегмента, исключает его из адресного пространства

Команды ipcs, ipcrm. Сис вызов shmctl(shmid, IPC_RMID, NULL).
Команда icps - позволяет посмотреть средства связи, к ктороым пользователь имеет права доступа на чтение
